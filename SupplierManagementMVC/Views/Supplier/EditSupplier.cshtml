@model SupplierManagementMVC.ViewModels.SupplierCategoryCountryViewModel
@{
    ViewBag.Title = "EditSupplier";
}
<br />
<h2>Edit Supplier</h2>

@using (Html.BeginForm("SaveEditSupplier", "Supplier"))
{
    @Html.AntiForgeryToken()
    <div class="container">
        @{
            string afmNew = string.Format("{0:000000000}", Model.Supplier.Afm);
        }

        @if (Model.Supplier.ActiveSupplier)
        {
            <div id="editForm" class="editForm">
                <div class="row">
                    @Html.LabelFor(model => model.Supplier.SupplierName)

                </div>
                <div class="input-group">
                    @Html.EditorFor(model => model.Supplier.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Supplier.SupplierName, "", new { @class = "text-danger" })
                </div>

                <div class="row">
                    @Html.LabelFor(model => model.Supplier.Afm)
                </div>
                <div class="input-group">

                    @Html.EditorFor(model => afmNew, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                    @Html.ValidationMessageFor(model => model.Supplier.Afm, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        else
        {
            <div id="notEditForm" class="notEditForm">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Supplier.SupplierName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Supplier.SupplierName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.Supplier.Afm)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => afmNew)
                    </dd>
                </dl>
            </div>
        }
        <div id="editFormNew" style="display:none;">
            <div class="row">
                @Html.LabelFor(model => model.Supplier.SupplierName)

            </div>
            <div class="input-group">
                @Html.EditorFor(model => model.Supplier.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Supplier.SupplierName, "", new { @class = "text-danger" })
            </div>

            <div class="row">
                @Html.LabelFor(model => model.Supplier.Afm)
            </div>
            <div class="input-group">
                @*@Html.EditorFor(model => model.Supplier.Afm, new { @class = "form-control",@type=  "text" })*@
                @Html.EditorFor(model =>afmNew, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
                @Html.ValidationMessageFor(model => model.Supplier.Afm, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="notEditFormNew" style="display:none;">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Supplier.SupplierName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Supplier.SupplierName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Supplier.Afm)
                </dt>
                <dd>
                    @Html.DisplayFor(model => afmNew)
                </dd>
            </dl>
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.Email)
        </div>
        <div class="input-group">
            @Html.EditorFor(model => model.Supplier.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Supplier.Email, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.Address)
        </div>
        <div class="input-group">
            @Html.EditorFor(model => model.Supplier.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Supplier.Address, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.Telephone)
        </div>
        <div class="input-group">
            @Html.EditorFor(model => model.Supplier.Telephone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Supplier.Telephone, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.SupplierCategoryID)
        </div>
        <div class="input-group">
            @Html.DropDownListFor(model => model.Supplier.SupplierCategoryID, new SelectList(Model.SupplierCategories, "ID", "CategoryName"), "Select Category", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Supplier.SupplierCategoryID, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.SupplierCountryID)
        </div>
        <div class="input-group">
            @Html.DropDownListFor(model => model.Supplier.SupplierCountryID, new SelectList(Model.SupplierCountries, "ID", "CountryName"), "Select Country", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Supplier.SupplierCountryID, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            @Html.LabelFor(model => model.Supplier.ActiveSupplier)
        </div>
        <div class="input-group" id="active1">
            @*@Html.CheckBoxFor(model => model.Supplier.ActiveSupplier, new { @class = "form-control" })*@
            @*@Html.EditorFor(model => model.Supplier.ActiveSupplier, new { htmlAttributes = new { @class = "form-check-input" } })*@
            @Html.CheckBoxFor(model => model.Supplier.ActiveSupplier, new { htmlAttributes = new { @class = "form-check-input" } })
            @Html.ValidationMessageFor(model => model.Supplier.ActiveSupplier, "", new { @class = "text-danger" })
        </div>

        @Html.HiddenFor(s => s.Supplier.ID)
        <br />
        <input type="submit" value="Save" class="btn btn-dark" />
    </div>
}
@Html.ActionLink("Back to List", "Index")



<script src="~/Scripts/jquery-3.4.1.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $("#Supplier_ActiveSupplier").click(function () {
                $("#editForm").hide();
                $("#notEditForm").hide();
                if ($("#Supplier_ActiveSupplier").is(':checked')) {
                    $("#editFormNew").show();  // checked
                    $("#notEditFormNew").hide(); //checked
                }
                else {
                    $("#editFormNew").hide();  // unchecked
                    $("#notEditFormNew").show();  // unchecked
                }
            });
        });
    });
</script>